{"version":3,"sources":["reportWebVitals.js","Input.js","Lists.js","Todo.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Input","type","className","value","this","props","inputVal","onChange","onput","placeholder","onKeyUp","inputKeyup","onClick","onsub","React","Component","Lists","lists","getcl","name","lis","length","map","list","index","id","Todo","e","setState","target","state","console","log","preventDefault","mvcl","data","splice","filter","item","finishList","rmcl","keyCode","config","pointColor","lineColor","pointOpacity","pointR","count","style","zIndex","display","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cce5feaa.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import './CSS/Input.min.css'\r\nimport React from \"react\"\r\n\r\nclass Input extends React.Component{\r\n    // constructor(props){\r\n    //     super(props)\r\n    // }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <label>请输入：</label>\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"shuru\"\r\n                    value={this.props.inputVal}\r\n                    onChange={this.props.onput}\r\n                    placeholder=\"请输入待办事件\"\r\n                    onKeyUp={this.props.inputKeyup}\r\n                />\r\n                &nbsp;\r\n                <button onClick={this.props.onsub}>提交</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Input;","import './CSS/Lists.min.css'\r\n\r\n//\r\nfunction Lists(props) {\r\n    let lists=props.lists;\r\n    let getcl=props.getcl;\r\n    let name=props.name;\r\n    // console.log(name,\"按钮\")\r\n    //遍历\r\n    const lis=lists.length ? lists.map((list,index)=>{\r\n        // return <li key={index}><span>{list}</span><button>完成</button></li>\r\n        // return (<li key={index} onClick={oncl} >{list}</li>)\r\n        return (<li key={index} >\r\n            <h3>{list}</h3>\r\n            {/* 写个箭头函数把传下来的函数调用并传入参数 */}\r\n            <h3 onClick={()=>{getcl(index)}}>{name}</h3>\r\n        </li>)\r\n    }) : <li>nothing</li>\r\n    return(\r\n        <div id=\"lists\">\r\n            <ul>\r\n                {lis}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Lists;","// import { Component } from 'react';\r\nimport React from 'react';\r\nimport './CSS/Todo.min.css';\r\n// import bgimg from './images/122.jpg';\r\nimport Input from './Input';\r\nimport Lists from './Lists';\r\nimport ReactCanvasNest from 'react-canvas-nest'\r\n\r\nclass Todo extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            lists: ['12', '32', 'fr'],\r\n            finishList: [12, 3],\r\n            inputVal: '',\r\n\r\n        }\r\n        // this.onput=this.onput.bind(this)\r\n        // this.onsub=this.onsub.bind(this)\r\n        // this.mvcl=this.mvcl.bind(this)\r\n        // this.rmcl=this.rmcl.bind(this)\r\n        // this.inputKeyup=this.inputKeyup.bind(this)\r\n    }\r\n    // 组件Input中的input框调用的方法\r\n    // onput(e){\r\n    //     this.setState({\r\n    //         inputVal: e.target.value\r\n    //     })\r\n    // }\r\n    onput = (e) => {\r\n        this.setState({\r\n            inputVal: e.target.value\r\n        })\r\n    }\r\n\r\n    // 组件Input中的button框调用的方法\r\n    onsub = (e) => {\r\n        //添加输入的数据到开头\r\n        // lists.unshift()\r\n        if (this.state.inputVal) {\r\n            this.setState({\r\n                lists: [this.state.inputVal, ...this.state.lists],\r\n                inputVal: ''\r\n            })\r\n        } else {\r\n            console.log(\"输入为空哦！\")\r\n        }\r\n        e.preventDefault();//阻止默认事件\r\n    }\r\n\r\n    //点击列表中的待办事件\r\n    //得搞定父子组件传参，函数式父子组件传参\r\n    //父传子\r\n    mvcl = (index) => {\r\n        // console.log(e.target.attributes.idx.value,\"mvcl\")\r\n        // let idx=e.target.attributes.idx.value\r\n        console.log(index)\r\n        let data = this.state.lists.splice(index, 1)\r\n\r\n        this.setState({\r\n            lists: this.state.lists.filter((item) => {\r\n                return item !== data\r\n            }),\r\n            finishList: [data, ...this.state.finishList]\r\n        })\r\n    }\r\n    rmcl = (index) => {\r\n        // console.log(\"点击了列表中的删除事件，彻底删除掉\")\r\n        // console.log(index,\"rmcl\")\r\n        // let idx=e.target.attributes.idx.value\r\n        let data = this.state.finishList.splice(index, 1)\r\n        this.setState({\r\n            finishList: this.state.finishList.filter((item) => {\r\n                return item !== data\r\n            })\r\n        })\r\n    }\r\n\r\n    //input回车事件\r\n    inputKeyup = (e) => {\r\n        if (e.keyCode === 13) {\r\n            this.onsub(e)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"bbg\">\r\n                {/* <img src={bgimg} alt=\"图片接收失败\"></img> */}\r\n                \r\n                <ReactCanvasNest\r\n                    className='canvasNest'\r\n                    config={{\r\n                        pointColor: ' 255, 255, 255 ',\r\n                        lineColor: '255,255,255',\r\n                        pointOpacity: 0.5,\r\n                        pointR: 2,\r\n                        count:100\r\n                    }}\r\n                    style={{ zIndex: 1 }}\r\n                />\r\n                <div className=\"sub\" style={{display:'none'}}>\r\n                    <Input onsub={this.onsub} onput={this.onput} inputVal={this.state.inputVal} inputKeyup={this.inputKeyup} />\r\n                    <span>任务列表</span>\r\n                    <div>\r\n                        <ul>\r\n                            <li>\r\n                                <span>待办</span>\r\n                                <Lists lists={this.state.lists} getcl={this.mvcl} name=\"完成\"></Lists>\r\n                            </li>\r\n                            <li>\r\n                                <span>已办</span>\r\n                                <Lists lists={this.state.finishList} getcl={this.rmcl} name=\"删除\"></Lists>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Todo;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './CSS/index.css';\r\n// import App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport Todo from './Todo';\r\n\r\nReactDOM.render(\r\n  <Todo />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}