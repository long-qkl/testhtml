{"version":3,"sources":["reportWebVitals.js","Todo.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Todo","props","onput","e","setState","inputVal","target","value","onsub","state","lists","console","log","preventDefault","mvcl","index","data","splice","filter","item","finishList","rmcl","inputKeyup","keyCode","className","config","pointColor","lineColor","pointOpacity","pointR","count","style","zIndex","React","Component","ReactDOM","render","document","getElementById"],"mappings":"wLAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,kECoHCQ,E,kDAlHX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAmBVC,MAAQ,SAACC,GACL,EAAKC,SAAS,CACVC,SAAUF,EAAEG,OAAOC,SAtBR,EA2BnBC,MAAQ,SAACL,GAGD,EAAKM,MAAMJ,SACX,EAAKD,SAAS,CACVM,MAAM,CAAE,EAAKD,MAAMJ,UAAd,mBAA2B,EAAKI,MAAMC,QAC3CL,SAAU,KAGdM,QAAQC,IAAI,wCAEhBT,EAAEU,kBAtCa,EA4CnBC,KAAO,SAACC,GAGJJ,QAAQC,IAAIG,GACZ,IAAIC,EAAO,EAAKP,MAAMC,MAAMO,OAAOF,EAAO,GAE1C,EAAKX,SAAS,CACVM,MAAO,EAAKD,MAAMC,MAAMQ,QAAO,SAACC,GAC5B,OAAOA,IAASH,KAEpBI,WAAW,CAAEJ,GAAH,mBAAY,EAAKP,MAAMW,gBAtDtB,EAyDnBC,KAAO,SAACN,GAIJ,IAAIC,EAAO,EAAKP,MAAMW,WAAWH,OAAOF,EAAO,GAC/C,EAAKX,SAAS,CACVgB,WAAY,EAAKX,MAAMW,WAAWF,QAAO,SAACC,GACtC,OAAOA,IAASH,QAhET,EAsEnBM,WAAa,SAACnB,GACQ,KAAdA,EAAEoB,SACF,EAAKf,MAAML,IAtEf,EAAKM,MAAQ,CACTC,MAAO,CAAC,KAAM,KAAM,MACpBU,WAAY,CAAC,GAAI,GACjBf,SAAU,IALC,E,0CA4EnB,WACI,OACI,qBAAKmB,UAAU,MAAf,SAGI,cAAC,IAAD,CACIA,UAAU,aACVC,OAAQ,CACJC,WAAY,kBACZC,UAAW,cACXC,aAAc,GACdC,OAAQ,EACRC,MAAM,KAEVC,MAAO,CAAEC,OAAQ,W,GA3FlBC,IAAMC,WCDzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,SAM1B/C,M","file":"static/js/main.0f82eca9.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// import { Component } from 'react';\r\nimport React from 'react';\r\nimport './CSS/Todo.min.css';\r\n// import bgimg from './images/122.jpg';\r\n// import Input from './Input';\r\n// import Lists from './Lists';\r\nimport ReactCanvasNest from 'react-canvas-nest'\r\n\r\nclass Todo extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            lists: ['12', '32', 'fr'],\r\n            finishList: [12, 3],\r\n            inputVal: '',\r\n\r\n        }\r\n        // this.onput=this.onput.bind(this)\r\n        // this.onsub=this.onsub.bind(this)\r\n        // this.mvcl=this.mvcl.bind(this)\r\n        // this.rmcl=this.rmcl.bind(this)\r\n        // this.inputKeyup=this.inputKeyup.bind(this)\r\n    }\r\n    // 组件Input中的input框调用的方法\r\n    // onput(e){\r\n    //     this.setState({\r\n    //         inputVal: e.target.value\r\n    //     })\r\n    // }\r\n    onput = (e) => {\r\n        this.setState({\r\n            inputVal: e.target.value\r\n        })\r\n    }\r\n\r\n    // 组件Input中的button框调用的方法\r\n    onsub = (e) => {\r\n        //添加输入的数据到开头\r\n        // lists.unshift()\r\n        if (this.state.inputVal) {\r\n            this.setState({\r\n                lists: [this.state.inputVal, ...this.state.lists],\r\n                inputVal: ''\r\n            })\r\n        } else {\r\n            console.log(\"输入为空哦！\")\r\n        }\r\n        e.preventDefault();//阻止默认事件\r\n    }\r\n\r\n    //点击列表中的待办事件\r\n    //得搞定父子组件传参，函数式父子组件传参\r\n    //父传子\r\n    mvcl = (index) => {\r\n        // console.log(e.target.attributes.idx.value,\"mvcl\")\r\n        // let idx=e.target.attributes.idx.value\r\n        console.log(index)\r\n        let data = this.state.lists.splice(index, 1)\r\n\r\n        this.setState({\r\n            lists: this.state.lists.filter((item) => {\r\n                return item !== data\r\n            }),\r\n            finishList: [data, ...this.state.finishList]\r\n        })\r\n    }\r\n    rmcl = (index) => {\r\n        // console.log(\"点击了列表中的删除事件，彻底删除掉\")\r\n        // console.log(index,\"rmcl\")\r\n        // let idx=e.target.attributes.idx.value\r\n        let data = this.state.finishList.splice(index, 1)\r\n        this.setState({\r\n            finishList: this.state.finishList.filter((item) => {\r\n                return item !== data\r\n            })\r\n        })\r\n    }\r\n\r\n    //input回车事件\r\n    inputKeyup = (e) => {\r\n        if (e.keyCode === 13) {\r\n            this.onsub(e)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"bbg\">\r\n                {/* <img src={bgimg} alt=\"图片接收失败\"></img> */}\r\n                \r\n                <ReactCanvasNest\r\n                    className='canvasNest'\r\n                    config={{\r\n                        pointColor: ' 255, 255, 255 ',\r\n                        lineColor: '255,255,255',\r\n                        pointOpacity: 0.5,\r\n                        pointR: 2,\r\n                        count:100\r\n                    }}\r\n                    style={{ zIndex: 1 }}\r\n                />\r\n                {/* <div className=\"sub\">\r\n                    <Input onsub={this.onsub} onput={this.onput} inputVal={this.state.inputVal} inputKeyup={this.inputKeyup} />\r\n                    <span>任务列表</span>\r\n                    <div>\r\n                        <ul>\r\n                            <li>\r\n                                <span>待办</span>\r\n                                <Lists lists={this.state.lists} getcl={this.mvcl} name=\"完成\"></Lists>\r\n                            </li>\r\n                            <li>\r\n                                <span>已办</span>\r\n                                <Lists lists={this.state.finishList} getcl={this.rmcl} name=\"删除\"></Lists>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div> */}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Todo;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './CSS/index.css';\n// import App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport Todo from './Todo';\n\nReactDOM.render(\n  <Todo />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}